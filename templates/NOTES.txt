Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

{{- if .Values.minio.enabled }}
== MinIO Object Storage ==
MinIO is deployed and accessible at:
  Service: {{ .Release.Name }}-minio
  Port: 9000

Access credentials:
  Username: {{ .Values.minio.auth.rootUser }}
  Password: {{ .Values.minio.auth.rootPassword }}

To access MinIO console, you can port-forward:
  $ kubectl port-forward svc/{{ .Release.Name }}-minio 9001:9001
{{- end }}

{{- if .Values.verticadb.enabled }}
== Vertica Database ==
Vertica is deployed and managed by the Vertica Operator:
  Service: {{ .Release.Name }}-vertica
  Port: {{ .Values.verticadb.service.port }}

Database credentials:
  Database: {{ .Values.verticadb.database.name }}
  Username: {{ .Values.verticadb.database.user }}
  Password: {{ .Values.verticadb.database.password }}
{{- end }}

{{- if .Values.metabase.enabled }}
== Metabase Visualization ==
Metabase is deployed and accessible at:
  Service: {{ .Release.Name }}-metabase
  Port: {{ .Values.metabase.service.port }}

To access Metabase UI, you can port-forward:
  $ kubectl port-forward svc/{{ .Release.Name }}-metabase 3000:3000

Then open http://localhost:3000 in your browser.
{{- end }}

== Deployment Order ==
The components are deployed in the following order:
1. MinIO (Object Storage)
2. Vertica Operator
3. Vertica Database (waits for MinIO)
4. Metabase (waits for Vertica)

== Next Steps ==
1. Configure your NASA API key for the ETL application
2. Set up ingress if you want external access
3. Configure storage classes for persistent volumes
4. Access Metabase to create dashboards and visualizations
5. Deploy your Go ETL application separately

For more information, visit: {{ .Chart.Home }}
